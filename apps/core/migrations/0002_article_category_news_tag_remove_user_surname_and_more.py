# Generated by Django 4.2.7 on 2023-11-27 13:55

import apps.core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата обновления')),
                ('title', models.CharField(max_length=1000, verbose_name='Название')),
                ('title_description', models.CharField(max_length=1000, verbose_name='Описание в заголовке')),
                ('image', models.FileField(blank=True, max_length=300, null=True, upload_to=apps.core.models.upload_course, verbose_name='Изображение статьи')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='URL')),
                ('likes', models.PositiveIntegerField(blank=True, default=0, verbose_name='Лайки')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
                'ordering': ['likes'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя категории')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='url')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата обновления')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание новости')),
                ('first_body', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Первый текст новости')),
                ('first_image', models.FileField(max_length=300, upload_to=apps.core.models.upload_news, verbose_name='Первое изображение')),
                ('second_body', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Второй текст новости')),
                ('second_image', models.FileField(blank=True, null=True, upload_to=apps.core.models.upload_news, verbose_name='Второе изображение')),
                ('preview_image', models.FileField(blank=True, max_length=300, null=True, upload_to=apps.core.models.upload_news, verbose_name='Превью картинка')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя тега')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='url')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.RemoveField(
            model_name='user',
            name='surname',
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, null=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='core.article', verbose_name='Статья')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Комментарий к статье',
                'verbose_name_plural': 'Комментарии к статье',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_article', to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='core.category', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='articles', to='core.tag', verbose_name='Теги'),
        ),
    ]
